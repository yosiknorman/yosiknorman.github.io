# <<<<<<<<<<<<<<<<<< Making Polygon >>>>>>>>>>>>>>>>>>
# <<<<<<<<<<<<<<< Create by Yosik Norman >>>>>>>>>>>>>
rm(list = ls())
E1 = c(6.227934,144.755859 , 6.315299,138.691406 ,
1.58183,137.548828 , -1.58183,135 ,
-3.951941,138.779297 , -1.406109,145.371094 ,
1.757537,146.337891 , 5.528511,146.337891)
E2 = c(7.798079,96.416016 , 6.489983,102.216797 ,
2.811371,108.105469 , -1.230374,107.578125 ,
-1.669686,100.722656 , -2.899153,96.416016 ,
0.878872,95.888672 , 2.899153,94.130859 , 5.266008,94.921875)
pol = function(dataE){
coords1 = matrix(c(dataE),
ncol = 2, byrow = TRUE)
coords1 = cbind(coords1[,2],coords1[,1])
P1 = Polygon(coords1)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
return(Ps1)
}
polE1 = pol(E1)
polE2 = pol(E2)
gab = union(polE1,polE2)
plot(gab,axes=TRUE,xlim = c(90,150),ylim=c(-15,15))
map("world", fill=F, col="brown", bg=NULL, xlim=c(90,150), ylim=c(-15, 15),
mar=c(0,0,0,0),resolution = 0.0000001,add = TRUE)
box()
library(raster)
library(sp)
library(maps)
# <<<<<<<<<<<<<<<<<< Making Polygon >>>>>>>>>>>>>>>>>>
# <<<<<<<<<<<<<<< Create by Yosik Norman >>>>>>>>>>>>>
rm(list = ls())
E1 = c(6.227934,144.755859 , 6.315299,138.691406 ,
1.58183,137.548828 , -1.58183,135 ,
-3.951941,138.779297 , -1.406109,145.371094 ,
1.757537,146.337891 , 5.528511,146.337891)
E2 = c(7.798079,96.416016 , 6.489983,102.216797 ,
2.811371,108.105469 , -1.230374,107.578125 ,
-1.669686,100.722656 , -2.899153,96.416016 ,
0.878872,95.888672 , 2.899153,94.130859 , 5.266008,94.921875)
pol = function(dataE){
coords1 = matrix(c(dataE),
ncol = 2, byrow = TRUE)
coords1 = cbind(coords1[,2],coords1[,1])
P1 = Polygon(coords1)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
return(Ps1)
}
polE1 = pol(E1)
polE2 = pol(E2)
gab = union(polE1,polE2)
x11(width = 10,height=7)
plot(gab,axes=TRUE,xlim = c(90,150),ylim=c(-15,15))
map("world", fill=F, col="brown", bg=NULL, xlim=c(90,150), ylim=c(-15, 15),
mar=c(0,0,0,0),resolution = 0.0000001,add = TRUE)
box()
library(raster)
library(sp)
library(maps)
# <<<<<<<<<<<<<<<<<< Making Polygon >>>>>>>>>>>>>>>>>>
# <<<<<<<<<<<<<<< Create by Yosik Norman >>>>>>>>>>>>>
rm(list = ls())
E1 = c(6.227934,144.755859 , 6.315299,138.691406 ,
1.58183,137.548828 , -1.58183,135 ,
-3.951941,138.779297 , -1.406109,145.371094 ,
1.757537,146.337891 , 5.528511,146.337891)
E2 = c(7.798079,96.416016 , 6.489983,102.216797 ,
2.811371,108.105469 , -1.230374,107.578125 ,
-1.669686,100.722656 , -2.899153,96.416016 ,
0.878872,95.888672 , 2.899153,94.130859 , 5.266008,94.921875)
pol = function(dataE){
coords1 = matrix(c(dataE),
ncol = 2, byrow = TRUE)
coords1 = cbind(coords1[,2],coords1[,1])
P1 = Polygon(coords1)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
return(Ps1)
}
polE1 = pol(E1)
polE2 = pol(E2)
gab = union(polE1,polE2)
x11(width = 10,height=7)
plot(gab,axes=TRUE,xlim = c(90,150),ylim=c(-15,15),grid = TRUE)
map("world", fill=F, col="brown", bg=NULL, xlim=c(90,150), ylim=c(-15, 15),
mar=c(0,0,0,0),resolution = 0.0000001,add = TRUE)
box()
library(raster)
library(sp)
library(maps)
# <<<<<<<<<<<<<<<<<< Making Polygon >>>>>>>>>>>>>>>>>>
# <<<<<<<<<<<<<<< Create by Yosik Norman >>>>>>>>>>>>>
rm(list = ls())
E1 = c(6.227934,144.755859 , 6.315299,138.691406 ,
1.58183,137.548828 , -1.58183,135 ,
-3.951941,138.779297 , -1.406109,145.371094 ,
1.757537,146.337891 , 5.528511,146.337891)
E2 = c(7.798079,96.416016 , 6.489983,102.216797 ,
2.811371,108.105469 , -1.230374,107.578125 ,
-1.669686,100.722656 , -2.899153,96.416016 ,
0.878872,95.888672 , 2.899153,94.130859 , 5.266008,94.921875)
pol = function(dataE){
coords1 = matrix(c(dataE),
ncol = 2, byrow = TRUE)
coords1 = cbind(coords1[,2],coords1[,1])
P1 = Polygon(coords1)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
return(Ps1)
}
polE1 = pol(E1)
polE2 = pol(E2)
gab = union(polE1,polE2)
x11(width = 10,height=7)
plot(gab,axes=TRUE,xlim = c(90,150),ylim=c(-15,15))
map("world", fill=F, col="brown", bg=NULL, xlim=c(90,150), ylim=c(-15, 15),
mar=c(0,0,0,0),resolution = 0.0000001,add = TRUE)
grid()
box()
library(raster)
library(sp)
library(maps)
# <<<<<<<<<<<<<<<<<< Making Polygon >>>>>>>>>>>>>>>>>>
# <<<<<<<<<<<<<<< Create by Yosik Norman >>>>>>>>>>>>>
rm(list = ls())
E1 = c(6.227934,144.755859 , 6.315299,138.691406 ,
1.58183,137.548828 , -1.58183,135 ,
-3.951941,138.779297 , -1.406109,145.371094 ,
1.757537,146.337891 , 5.528511,146.337891)
E2 = c(7.798079,96.416016 , 6.489983,102.216797 ,
2.811371,108.105469 , -1.230374,107.578125 ,
-1.669686,100.722656 , -2.899153,96.416016 ,
0.878872,95.888672 , 2.899153,94.130859 , 5.266008,94.921875)
pol = function(dataE){
coords1 = matrix(c(dataE),
ncol = 2, byrow = TRUE)
coords1 = cbind(coords1[,2],coords1[,1])
P1 = Polygon(coords1)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
return(Ps1)
}
polE1 = pol(E1)
polE2 = pol(E2)
gab = union(polE1,polE2)
x11(width = 10,height=7)
plot(gab,axes=TRUE,xlim = c(90,150),ylim=c(-15,15))
map("world", fill=F, col="brown", bg=NULL, xlim=c(90,150), ylim=c(-15, 15),
mar=c(0,0,0,0),resolution = 0.0000001,add = TRUE)
grid(col = "red")
box()
library(raster)
library(mgcv)
library(sp)
library(maps)
# <<<<<<<<<<<<<<<<<< Making Polygon >>>>>>>>>>>>>>>>>>
# <<<<<<<<<<<<<<< Create by Yosik Norman >>>>>>>>>>>>>
rm(list = ls())
E1 = c(6.227934,144.755859 , 6.315299,138.691406 ,
1.58183,137.548828 , -1.58183,135 ,
-3.951941,138.779297 , -1.406109,145.371094 ,
1.757537,146.337891 , 5.528511,146.337891)
E2 = c(7.798079,96.416016 , 6.489983,102.216797 ,
2.811371,108.105469 , -1.230374,107.578125 ,
-1.669686,100.722656 , -2.899153,96.416016 ,
0.878872,95.888672 , 2.899153,94.130859 , 5.266008,94.921875)
pol = function(dataE){
coords1 = matrix(c(dataE),
ncol = 2, byrow = TRUE)
coords1 = cbind(coords1[,2],coords1[,1])
P1 = Polygon(coords1)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
return(Ps1)
}
polE1 = pol(E1)
polE2 = pol(E2)
gab = union(polE1,polE2)
x11(width = 10,height=7)
plot(gab,axes=TRUE,xlim = c(90,150),ylim=c(-15,15))
map("world", fill=F, col="brown", bg=NULL, xlim=c(90,150), ylim=c(-15, 15),
mar=c(0,0,0,0),resolution = 0.0000001,add = TRUE)
grid(col = "red")
box()
library(raster)
library(mgcv)
library(sp)
library(maps)
# <<<<<<<<<<<<<<<<<< Making Polygon >>>>>>>>>>>>>>>>>>
# <<<<<<<<<<<<<<< Create by Yosik Norman >>>>>>>>>>>>>
rm(list = ls())
E1 = c(6.227934,144.755859 , 6.315299,138.691406 ,
1.58183,137.548828 , -1.58183,135 ,
-3.951941,138.779297 , -1.406109,145.371094 ,
1.757537,146.337891 , 5.528511,146.337891)
E2 = c(7.798079,96.416016 , 6.489983,102.216797 ,
2.811371,108.105469 , -1.230374,107.578125 ,
-1.669686,100.722656 , -2.899153,96.416016 ,
0.878872,95.888672 , 2.899153,94.130859 , 5.266008,94.921875)
pol = function(dataE){
coords1 = matrix(c(dataE),
ncol = 2, byrow = TRUE)
coords1 = cbind(coords1[,2],coords1[,1])
P1 = Polygon(coords1)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
return(Ps1)
}
polE1 = pol(E1)
polE2 = pol(E2)
gab = union(polE1,polE2)
x11(width = 10,height=7)
plot(gab,axes=TRUE,xlim = c(90,150),ylim=c(-15,15))
map("world", fill=F, col="brown", bg=NULL, xlim=c(90,150), ylim=c(-15, 15),
mar=c(0,0,0,0),resolution = 0.0000001,add = TRUE)
grid(col = "red")
box()
x <- seq(90,150,length=20)
y <- seq(-15,15,length=20)
gr <- as.matrix(expand.grid(x,y))
inside <- in.out(gab,gr)
points(gr,col=as.numeric(inside)+1)
gab
inside <- in.out(gab,gr)
polygon(gab)
library(raster)
library(mgcv)
library(sp)
library(maps)
# <<<<<<<<<<<<<<<<<< Making Polygon >>>>>>>>>>>>>>>>>>
# <<<<<<<<<<<<<<< Create by Yosik Norman >>>>>>>>>>>>>
rm(list = ls())
E1 = c(6.227934,144.755859 , 6.315299,138.691406 ,
1.58183,137.548828 , -1.58183,135 ,
-3.951941,138.779297 , -1.406109,145.371094 ,
1.757537,146.337891 , 5.528511,146.337891)
E2 = c(7.798079,96.416016 , 6.489983,102.216797 ,
2.811371,108.105469 , -1.230374,107.578125 ,
-1.669686,100.722656 , -2.899153,96.416016 ,
0.878872,95.888672 , 2.899153,94.130859 , 5.266008,94.921875)
pol = function(dataE){
coords1 = matrix(c(dataE),
ncol = 2, byrow = TRUE)
coords1 = cbind(coords1[,2],coords1[,1])
P1 = Polygon(coords1)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
return(Ps1)
}
polE1 = pol(E1)
polE2 = pol(E2)
gab = union(polE1,polE2)
x11(width = 10,height=7)
plot(gab,axes=TRUE,xlim = c(90,150),ylim=c(-15,15))
map("world", fill=F, col="brown", bg=NULL, xlim=c(90,150), ylim=c(-15, 15),
mar=c(0,0,0,0),resolution = 0.0000001,add = TRUE)
grid(col = "red")
box()
x <- seq(90,150,length=20)
y <- seq(-15,15,length=20)
gr <- as.matrix(expand.grid(x,y))
polygon(gab)
inside <- in.out(gab,gr)
points(gr,col=as.numeric(inside)+1)
library(raster)
library(mgcv)
library(sp)
library(maps)
# <<<<<<<<<<<<<<<<<< Making Polygon >>>>>>>>>>>>>>>>>>
# <<<<<<<<<<<<<<< Create by Yosik Norman >>>>>>>>>>>>>
rm(list = ls())
E1 = c(6.227934,144.755859 , 6.315299,138.691406 ,
1.58183,137.548828 , -1.58183,135 ,
-3.951941,138.779297 , -1.406109,145.371094 ,
1.757537,146.337891 , 5.528511,146.337891)
E2 = c(7.798079,96.416016 , 6.489983,102.216797 ,
2.811371,108.105469 , -1.230374,107.578125 ,
-1.669686,100.722656 , -2.899153,96.416016 ,
0.878872,95.888672 , 2.899153,94.130859 , 5.266008,94.921875)
pol = function(dataE){
coords1 = matrix(c(dataE),
ncol = 2, byrow = TRUE)
coords1 = cbind(coords1[,2],coords1[,1])
P1 = Polygon(coords1)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
return(Ps1)
}
polE1 = pol(E1)
polE2 = pol(E2)
gab = union(polE1,polE2)
x11(width = 10,height=7)
plot(gab,axes=TRUE,xlim = c(90,150),ylim=c(-15,15))
map("world", fill=F, col="brown", bg=NULL, xlim=c(90,150), ylim=c(-15, 15),
mar=c(0,0,0,0),resolution = 0.0000001,add = TRUE)
grid(col = "red")
box()
x <- seq(90,150,length=20)
y <- seq(-15,15,length=20)
gr <- as.matrix(expand.grid(x,y))
polygon(gab)
inside <- in.out(gab,gr)
points(gr,col=as.numeric(inside)+1)
library(raster)
library(mgcv)
library(sp)
library(maps)
# <<<<<<<<<<<<<<<<<< Making Polygon >>>>>>>>>>>>>>>>>>
# <<<<<<<<<<<<<<< Create by Yosik Norman >>>>>>>>>>>>>
rm(list = ls())
E1 = c(6.227934,144.755859 , 6.315299,138.691406 ,
1.58183,137.548828 , -1.58183,135 ,
-3.951941,138.779297 , -1.406109,145.371094 ,
1.757537,146.337891 , 5.528511,146.337891)
E2 = c(7.798079,96.416016 , 6.489983,102.216797 ,
2.811371,108.105469 , -1.230374,107.578125 ,
-1.669686,100.722656 , -2.899153,96.416016 ,
0.878872,95.888672 , 2.899153,94.130859 , 5.266008,94.921875)
pol = function(dataE){
coords1 = matrix(c(dataE),
ncol = 2, byrow = TRUE)
coords1 = cbind(coords1[,2],coords1[,1])
P1 = polygon(coords1)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
return(Ps1)
}
polE1 = pol(E1)
polE2 = pol(E2)
gab = union(polE1,polE2)
x11(width = 10,height=7)
plot(gab,axes=TRUE,xlim = c(90,150),ylim=c(-15,15))
map("world", fill=F, col="brown", bg=NULL, xlim=c(90,150), ylim=c(-15, 15),
mar=c(0,0,0,0),resolution = 0.0000001,add = TRUE)
grid(col = "red")
box()
x <- seq(90,150,length=20)
y <- seq(-15,15,length=20)
gr <- as.matrix(expand.grid(x,y))
polygon(gab)
inside <- in.out(gab,gr)
points(gr,col=as.numeric(inside)+1)
library(raster)
library(mgcv)
library(sp)
library(maps)
# <<<<<<<<<<<<<<<<<< Making Polygon >>>>>>>>>>>>>>>>>>
# <<<<<<<<<<<<<<< Create by Yosik Norman >>>>>>>>>>>>>
rm(list = ls())
E1 = c(6.227934,144.755859 , 6.315299,138.691406 ,
1.58183,137.548828 , -1.58183,135 ,
-3.951941,138.779297 , -1.406109,145.371094 ,
1.757537,146.337891 , 5.528511,146.337891)
E2 = c(7.798079,96.416016 , 6.489983,102.216797 ,
2.811371,108.105469 , -1.230374,107.578125 ,
-1.669686,100.722656 , -2.899153,96.416016 ,
0.878872,95.888672 , 2.899153,94.130859 , 5.266008,94.921875)
pol = function(dataE){
coords1 = matrix(c(dataE),
ncol = 2, byrow = TRUE)
coords1 = cbind(coords1[,2],coords1[,1])
P1 = Polygon(coords1)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
return(Ps1)
}
polE1 = pol(E1)
polE2 = pol(E2)
gab = union(polE1,polE2)
x11(width = 10,height=7)
plot(gab,axes=TRUE,xlim = c(90,150),ylim=c(-15,15))
map("world", fill=F, col="brown", bg=NULL, xlim=c(90,150), ylim=c(-15, 15),
mar=c(0,0,0,0),resolution = 0.0000001,add = TRUE)
grid(col = "red")
box()
x <- seq(90,150,length=20)
y <- seq(-15,15,length=20)
gr <- as.matrix(expand.grid(x,y))
polygon(gab)
inside <- in.out(gab,gr)
points(gr,col=as.numeric(inside)+1)
lon1 = E1[seq(2,length(E1),by=2)]
lat1 = E1[seq(1,length(E1),by=2)]
point.in.polygon(100,3,lon1,lat1)
point.in.polygon(lon1[1],lat1[1],lon1,lat1)
point.in.polygon(lon1[1]+0.1,lat1[1],lon1,lat1)
lon1[1]
point.in.polygon(lon1[1]-0.1,lat1[1],lon1,lat1)
point.in.polygon(lon1[1]-0.1,lat1[1],gab)
gab@polygons
gab@bbox
gab@plotOrder
gab$`1`
gab[[1]]
point.in.polygon(lon1[1]-0.1,lat1[1])
point.in.polygon(lon1[1]-0.1,lat1[1],lon1,lat1)
inside.park <- !is.na(over(lon1[1]-0.1,lat1[1], as(gab, "SpatialPolygons")))
over
inside.park <- !is.na(over(lon1[1]-0.1,lat1[1], gab))
gab
?over
E1
inside.park <- !is.na(over(E1, gab))
inside.park <- !is.na(over(E1[1,2], gab))
E1[1,2]
inside.park <- !is.na(over(SpatialPoints(E1[1,2]), gab))
inside.park <- !is.na(over(SpatialPoints(E1[1,2]),gab))
SpatialPoints(E1[1,2]
)
SpatialPoints(E1[1,2])
E1[1,2]
E1[1,1]
E1
SpatialPoints(E1[1:2])
as.SpatialPoints
inside.park <- !is.na(over((E1[1:2]),gab))
?SpatialPoints
SpatialPoints(lon1,lat1)
SpatialPoints(data.frame(lon1,lat1))
inside.park <- !is.na(over(SpatialPoints(data.frame(lon1,lat1)),gab))
SpatialPoints(data.frame(lon1,lat1))[1]
sppo = SpatialPoints(data.frame(lon1,lat1))
sppo[1]
sppo@coords
class(sppo@coords)
inside.park <- !is.na(over(sppo,gab))
library(raster)
library(mgcv)
library(sp)
library(maps)
# <<<<<<<<<<<<<<<<<< Making Polygon >>>>>>>>>>>>>>>>>>
# <<<<<<<<<<<<<<< Create by Yosik Norman >>>>>>>>>>>>>
rm(list = ls())
E1 = c(6.227934,144.755859 , 6.315299,138.691406 ,
1.58183,137.548828 , -1.58183,135 ,
-3.951941,138.779297 , -1.406109,145.371094 ,
1.757537,146.337891 , 5.528511,146.337891)
lon1 = E1[seq(2,length(E1),by=2)]
lat1 = E1[seq(1,length(E1),by=2)]
E2 = c(7.798079,96.416016 , 6.489983,102.216797 ,
2.811371,108.105469 , -1.230374,107.578125 ,
-1.669686,100.722656 , -2.899153,96.416016 ,
0.878872,95.888672 , 2.899153,94.130859 , 5.266008,94.921875)
pol = function(dataE){
coords1 = matrix(c(dataE),
ncol = 2, byrow = TRUE)
coords1 = cbind(coords1[,2],coords1[,1])
P1 = Polygon(coords1)
Ps1 = SpatialPolygons(list(Polygons(list(P1), ID = "a")), proj4string=CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"))
return(Ps1)
}
polE1 = pol(E1)
polE2 = pol(E2)
gab = union(polE1,polE2)
x11(width = 10,height=7)
plot(gab,axes=TRUE,xlim = c(90,150),ylim=c(-15,15))
map("world", fill=F, col="brown", bg=NULL, xlim=c(90,150), ylim=c(-15, 15),
mar=c(0,0,0,0),resolution = 0.0000001,add = TRUE)
grid(col = "red")
box()
x <- seq(90,150,length=20)
y <- seq(-15,15,length=20)
gr <- as.matrix(expand.grid(x,y))
polygon(gab)
inside <- in.out(gab,gr)
points(gr,col=as.numeric(inside)+1)
point.in.polygon(lon1[1]-0.1,lat1[1],lon1,lat1)
sppo = SpatialPoints(data.frame(lon1,lat1))
sppo@coords = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
inside.park <- !is.na(over(sppo,gab))
sppo
sppo@coords
sppo@proj4string = CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
sppo
inside.park <- !is.na(over(sppo,gab))
inside.park
inside.park <- !is.na(over(sppo,gab))
inside.park
library(matlab)
library(matlab)
pos <- matrix(runif(20), 10, 2)
colnames(pos) <- c("lon", "lat")
print(pos)
new.pos <- c(0.5, 0.5) # New position
# Compute distance to points and select nearest index
jarakmin = min(abs(colSums((t(pos) - new.pos))))
# nearest.idx <- which.min(colSums((t(pos) - new.pos)) )
# nearest.idx <- which(abs(colSums((t(pos) - new.pos))) < (jarakmin+0.01))
# nearest.idx
# pos[nearest.idx, ]
cari_terdekat = function(new.pos){
nearest.idx <- which(abs(colSums((t(pos) - new.pos))) < (jarakmin+0.01))
nearest.idx
pos[nearest.idx, ]
hasil = list(nearest.idx,pos[nearest.idx, ])
return(hasil)
}
hasil=cari_terdekat(new.pos = new.pos)
if(length(hasil[[1]]) == 0){
print("kagak Ada")
}else{
print(hasil[[2]])
}
hasil[[2]]
ph <- getData("GADM", country = "PHL", level = 1)
library(leaflet)
leaflet::addTiles()
```{r echo=F}
leaflet() %>% addTiles()
m <- leaflet() %>% addTiles()
m
setwd("~/Documents/terakhir/leaf/")
rmarkdown::render(".")
knitr::run(".")
library(htmlwidgets)
saveWidget(m, 'lef.html', selfcontained = T)
library(leaflet)
m <- leaflet() %>% addTiles()
m
library(htmlwidgets)
saveWidget(m, 'let.html', selfcontained = F)
